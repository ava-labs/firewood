name: ci

on:
  # XXX: run on every push while testing the new workflow.
  # We want to run this on manual, tags, and ideally check
  # it works on every PR, but try not to pollute the repo
  # with branches + static lib artifacts.
  push:
    branches: ['*']

env:
  CARGO_TERM_COLOR: always

jobs:
  build-firewood-ffi-libs:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2

      - name: Build for ${{ matrix.target }}
        run: cargo build --profile maxperf --target ${{ matrix.target }} -p firewood-ffi

      - name: List compiled target directory
        run: find target -type f | sort
        
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/maxperf/libfirewood_ffi.a
          if-no-files-found: error

  push-firewood-ffi-libs:
    needs: build-firewood-ffi-libs
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # static libs to the repository.
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: ffi/libs

      - name: List downloaded target directory
        run: find ffi/libs -type f | sort

      - name: Upload organized binaries
        uses: actions/upload-artifact@v4
        with:
          name: firewood-ffi-static-libs
          path: ffi/libs
          if-no-files-found: error

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'ci: attach firewood-ffi static libs'
          branch: ${{ github.ref_name }}-firewood-ffi-libs
          create_branch: true

  test-firewood-ffi-libs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04-arm, macos-latest, macos-13]
    needs: push-firewood-ffi-libs
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}-firewood-ffi-libs
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "ffi/go.mod"
          cache-dependency-path: "ffi/go.sum"
      - name: Test Go FFI bindings
        working-directory: ffi
        # cgocheck2 is expensive but provides complete pointer checks
        run: GOEXPERIMENT=cgocheck2 go test ./...